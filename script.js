document.getElementById("year").textContent = new Date().getFullYear();

let currentUserId = null;

const form = document.getElementById("premiumForm");
const status = document.getElementById("status");

// Backend URL (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –ø—Ä–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏)
const BACKEND_URL = "http://127.0.0.1:5000";

form.addEventListener("submit", async (e) => {
  e.preventDefault();
  status.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";

  const formData = new FormData(form);
  const telegramId = formData.get("telegram");

  // –í–∞–ª–∏–¥–∞—Ç—Å–∏—è–∏ Telegram ID
  if (!/^\d+$/.test(telegramId)) {
    status.textContent = "‚ö† Telegram ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º!";
    return;
  }

  const payload = {
    fullName: formData.get("fullName"),
    telegram: telegramId,
    instagram: formData.get("instagram") || "",
    message: formData.get("message") || ""
  };

  try {
    const res = await fetch(`${BACKEND_URL}/register`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    });
    const data = await res.json();
    if (data.status === "ok") {
      currentUserId = data.user_id;
      status.textContent = `‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –í–∞—à ID: ${currentUserId}`;
      form.reset();
    } else {
      status.textContent = `‚ùå –û—à–∏–±–∫–∞: ${data.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`;
    }
  } catch (err) {
    console.error("Error:", err);
    status.textContent = "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É";
  }
});

// Chat widget
const chatBtn = document.createElement("button");
chatBtn.textContent = "üí¨ –ß–∞—Ç —Å –∞–¥–º–∏–Ω–æ–º";
chatBtn.style.position = "fixed";
chatBtn.style.bottom = "20px";
chatBtn.style.right = "20px";
chatBtn.style.padding = "12px 18px";
chatBtn.style.borderRadius = "10px";
chatBtn.style.background = "linear-gradient(90deg, #8A5DFF, #00C2FF)";
chatBtn.style.color = "#fff";
chatBtn.style.border = "none";
chatBtn.style.cursor = "pointer";
chatBtn.style.zIndex = "1000";
document.body.appendChild(chatBtn);

chatBtn.addEventListener("click", async () => {
  if (!currentUserId) {
    alert("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É!");
    return;
  }

  let msg = prompt("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:");
  if (msg) {
    try {
      const res = await fetch(`${BACKEND_URL}/send_message`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ user_id: currentUserId, text: msg, sender: "user" })
      });
      const data = await res.json();
      if (data.status === "ok") {
        alert("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
      } else {
        alert(`–û—à–∏–±–∫–∞: ${data.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`);
      }
    } catch (err) {
      console.error("Error:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ!");
    }
  }
});